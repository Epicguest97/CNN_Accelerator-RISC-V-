$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 16 2 feature_map_out[0] [15:0] $end
  $var wire 16 3 feature_map_out[1] [15:0] $end
  $var wire 16 4 feature_map_out[2] [15:0] $end
  $var wire 16 5 feature_map_out[3] [15:0] $end
  $var wire 16 6 feature_map_out[4] [15:0] $end
  $var wire 16 7 feature_map_out[5] [15:0] $end
  $var wire 16 8 feature_map_out[6] [15:0] $end
  $var wire 16 9 feature_map_out[7] [15:0] $end
  $var wire 16 : feature_map_out[8] [15:0] $end
  $scope module cnn_accelerator $end
   $var wire 16 2 feature_map_out[0] [15:0] $end
   $var wire 16 3 feature_map_out[1] [15:0] $end
   $var wire 16 4 feature_map_out[2] [15:0] $end
   $var wire 16 5 feature_map_out[3] [15:0] $end
   $var wire 16 6 feature_map_out[4] [15:0] $end
   $var wire 16 7 feature_map_out[5] [15:0] $end
   $var wire 16 8 feature_map_out[6] [15:0] $end
   $var wire 16 9 feature_map_out[7] [15:0] $end
   $var wire 16 : feature_map_out[8] [15:0] $end
   $scope module conv_inst $end
    $var wire 32 , i [31:0] $end
    $var wire 32 - j [31:0] $end
    $var wire 32 . m [31:0] $end
    $var wire 32 / n [31:0] $end
    $var wire 16 # kernel[0] [15:0] $end
    $var wire 16 $ kernel[1] [15:0] $end
    $var wire 16 % kernel[2] [15:0] $end
    $var wire 16 & kernel[3] [15:0] $end
    $var wire 16 ' kernel[4] [15:0] $end
    $var wire 16 ( kernel[5] [15:0] $end
    $var wire 16 ) kernel[6] [15:0] $end
    $var wire 16 * kernel[7] [15:0] $end
    $var wire 16 + kernel[8] [15:0] $end
    $var wire 16 0 sum [15:0] $end
   $upscope $end
   $scope module maxpool_inst $end
    $var wire 16 2 feature_map_out[0] [15:0] $end
    $var wire 16 3 feature_map_out[1] [15:0] $end
    $var wire 16 4 feature_map_out[2] [15:0] $end
    $var wire 16 5 feature_map_out[3] [15:0] $end
    $var wire 16 6 feature_map_out[4] [15:0] $end
    $var wire 16 7 feature_map_out[5] [15:0] $end
    $var wire 16 8 feature_map_out[6] [15:0] $end
    $var wire 16 9 feature_map_out[7] [15:0] $end
    $var wire 16 : feature_map_out[8] [15:0] $end
    $var wire 32 ; i [31:0] $end
    $var wire 32 ; j [31:0] $end
    $var wire 16 1 max_val [15:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b0000000000000001 #
b0000000000000001 $
b0000000000000001 %
b0000000000000001 &
b0000000000000001 '
b0000000000000001 (
b0000000000000001 )
b0000000000000001 *
b0000000000000001 +
b00000000000000000000000000000110 ,
b00000000000000000000000000000110 -
b00000000000000000000000000000011 .
b00000000000000000000000000000011 /
b0000000000000000 0
b0000000000000000 1
b0000000000000000 2
b0000000000000000 3
b0000000000000000 4
b0000000000000000 5
b0000000000000000 6
b0000000000000000 7
b0000000000000000 8
b0000000000000000 9
b0000000000000000 :
b00000000000000000000000000000011 ;
#10
b1111000011110000 0
b0111100001110000 2
b0111100001110000 3
b0111100001110000 5
b0111100001110000 6
#20
b1010101010101010 0
b0101010101010100 1
b0000000000000000 2
b0000000000000000 3
b0000000000000000 5
b0000000000000000 6
b0101010101010100 8
b0101010101010100 9
b0101010101010100 :
